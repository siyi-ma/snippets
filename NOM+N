let
    Source = Csv.Document(oisOtsingLT_viimaseCsv,[Delimiter=";", Columns=29, Encoding=65001, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"sünnikuupäev", type date}, {"immatrikuleerimise kuupäev", type date}, {"viimane täiskoormuselt osakoormusele viimise kuupäev  ", type date}, {"eksmatrikuleerimise kuupäev", type date}, {"viimane osakoormuselt täiskoormusele viimise kuupäev", type date}, {"akad. puhkusel sem. arv", Int64.Type}, {"õpitud semestrite arv", Int64.Type}, {"SEL", Int64.Type}, {"EAP", type number}, {"KKH (EAP)", type number}, {"ennistamise kuupäev", type date}}),
    #"Filtered Rows2" = Table.SelectRows(#"Changed Type", each ([õppekava versiooni kood] <> "TAKM02/12" and [õppekava versiooni kood] <> "TASB08/15" and [õppekava versiooni kood] <> "TASM08/16" and [õppekava versiooni kood] <> "TASM08/18")),
    addVanu = Table.AddColumn(#"Filtered Rows2", "vanu", each let _text = "1/9/"&[sisseastumisaasta],
_calDate = Date.From(_text), _duration = Number.From(_calDate-[sünnikuupäev]), 
result = Number.RoundUp(_duration/365) in result, Int64.Type),
    #"Removed Columns" = Table.RemoveColumns(addVanu,{"", "sünnikuupäev", "finantseerimisallikas", "finantsallika täpsustus", "sihtstipendium", "viimane osakoormuselt täiskoormusele viimise kuupäev", "viimane täiskoormuselt osakoormusele viimise kuupäev  ", "SEL"}),
    // 2022/23 õa tulemuslikkuse arvesse lähevad 4-aastase nominaalajaga DOK kavad, millel toimus vastuvõtt 2017/18 õa; 3-aastase nominaalajaga BAK kavad, millel toimus vastuvõtt 2019/20 õa; 2-aastase nominaalajaga MAG kavad, millel toimus vastuvõtt 2020/21 õa. 
    addAruanneAasta = Table.AddColumn(#"Removed Columns", "auranneAasta", each 
let _sisseaasta = Number.FromText([sisseastumisaasta]), _tase = Text.Middle([õppekava versiooni kood],3,1),  nomPlusN = if _tase="D" then 5 else if _tase="M" then 2 else if _tase ="B" then 3 else 0, 
aruanneAastaP1 = _sisseaasta + nomPlusN, aruanneAastaP2 = aruanneAastaP1+1,
P1 = Number.ToText(aruanneAastaP1), P2= Text.End(Number.ToText(aruanneAastaP2),2), P3 = Number.ToText(aruanneAastaP1+1), P4 = Text.End(Number.ToText(aruanneAastaP2+1),2),
nov10 = #date(Number.FromText([sisseastumisaasta]), 11, 10), 
result = if [immatrikuleerimise kuupäev]<= nov10 then P1&"/"&P2 else P3&"/"&P4 in result, type text),
    #"Added Custom2" = Table.AddColumn(addAruanneAasta, "katkestanud enne 10.11", each let nov10 = #date(Number.FromText([sisseastumisaasta]), 11, 10),
_tase = Text.Middle([õppekava versiooni kood],3,1), 
nom = if _tase ="B" then 3 else if _tase ="M" then 2 else if _tase ="D" then 4 else 0, 
nomPlus0_5 = if _tase ="B" then 3.5 else if _tase ="M" then 2.5 else if _tase ="D" then 4.5 else 0, 
nomPlus1 = if _tase ="B" then 4 else if _tase ="M" then 3 else if _tase ="D" then 5 else 0, 
nomPlus1_5 = if _tase ="B" then 4.5 else if _tase ="M" then 3.5 else if _tase ="D" then 5.5 else 0, 
nomPlus2 = if _tase ="B" then 5 else if _tase ="M" then 4 else if _tase ="D" then 6 else 0, 
nomPlus2_5 = if _tase ="B" then 5.5 else if _tase ="M" then 4.5 else if _tase ="D" then 6.5 else 0, 
nomPlus3 = if _tase ="B" then 6 else if _tase ="M" then 5 else if _tase ="D" then 7 else 0, 
nom_cutoff = Date.AddDays([immatrikuleerimise kuupäev], nom*365),
nomPlus0_5_cutoff = Date.AddDays([immatrikuleerimise kuupäev], Number.Round(nomPlus0_5*365,0)),
nomPlus1_cutoff =  Date.AddDays([immatrikuleerimise kuupäev], nomPlus1*365),
nomPlus1_5_cutoff =  Date.AddDays([immatrikuleerimise kuupäev], Number.RoundUp(nomPlus1_5*365,0)),
nomPlus2_cutoff =  Date.AddDays([immatrikuleerimise kuupäev], nomPlus2*365), 
result = if [eksmatrikuleerimise kuupäev] = null then "jaiOppima" 
    else if [eksmatrikuleerimise kuupäev]<= nov10 then "jah" 
    else if [lõpetanud]="jah" and [eksmatrikuleerimise kuupäev] <= nom_cutoff  then "nom" 
    else if  [lõpetanud]="jah" and [eksmatrikuleerimise kuupäev] <= nomPlus0_5_cutoff   then "nom+.5" 
    else if  [lõpetanud]="jah" and [eksmatrikuleerimise kuupäev] <= nomPlus1_cutoff then "nom+1" 
    else if  [lõpetanud]="jah" and [eksmatrikuleerimise kuupäev] <= nomPlus1_5_cutoff then "nom+1.5"
    else if  [lõpetanud]="jah" and [eksmatrikuleerimise kuupäev] <= nomPlus2_cutoff   then "nom+2"
    else if  [lõpetanud]="jah" and [eksmatrikuleerimise kuupäev] > nomPlus2_cutoff then ">nom+2" 
    else "valjalangevus" in result, type text),
    addEksmatQuarter = Table.AddColumn(#"Added Custom2", "eksmatQuarter", each Date.QuarterOfYear([eksmatrikuleerimise kuupäev]), Int64.Type)
in
    addEksmatQuarter

= Table.AddColumn(addRajaltMaas, "aruandeaasta", each let _month = Date.Month([immatkp]), _day = Date.Day([immatkp]), _year = Date.Year([immatkp]), 
_value = if [tase]="BAK" then 3 else if [tase] ="MAG" then 2 else 0, 
result1 = Number.ToText(_year+_value)&"/"&Text.End(Number.ToText(_year+_value+1), 2),
result2 = Number.ToText(_year+_value+1)&"/"&Text.End(Number.ToText(_year+_value+2),2),
result = if _month >= 11 and _day >=10 then result2 else result1 in result, type text)


"semester", 

VAR CY = YEAR('Calendar'[Date])
VAR  PY = YEAR('Calendar'[Date])-1
VAR semester =  IF(
	MONTH('Calendar'[Date])>=9,
	RIGHT(CY, 2)&"S",
	IF(
		MONTH('Calendar'[Date])=1,
		RIGHT(PY, 2)&"S",
		RIGHT(CY,  2)&"K"
		)
	)
RETURN  semester

aruanneAasta = 
 Table.AddColumn(#"Added Custom", "aruanneAasta", each let aastaNum = Number.FromText(Text.Middle([õppeaasta],2,2)), 
nomPlus1 = if Text.Start([õppetase],3)="bak" then 4 else 3, 
aruanneAastaP1 = aastaNum + nomPlus1,  aruanneAastaP2=aruanneAastaP1+1, 
P1 = "20"&Number.ToText(aruanneAastaP1), P2 = Number.ToText(aruanneAastaP2),  result = P1&"/"&P2  in result, type text)

semester = let 
_month = Date.Month([date]), 
CY= Date.Year([date]), NY = CY+1, PY = CY-1, 
_CY = Text.End(Number.ToText(CY),2),
_NY = Number.ToText(NY), 
_PY = Text.End(Number.ToText(PY),2),
result = if _month >=9 then _CY&"S" else if _month = 1 then _PY&"S" else _CY&"K" in result, type text)

oppeaasta = let 
_month = Date.Month([kp]), 
CY= Date.Year([kp]), NY = CY+1, PY = CY-1, 
_CY = Number.ToText(CY), 
_NY = Number.ToText(NY), 
_PY = Number.ToText(PY),
result = if _month >=9 then _CY&"/"&Text.End(_NY,2) else _PY&"/"&Text.End(_CY,2) in result, type text)

"oppeaasta", 

VAR CY = YEAR('Calendar'[Date])  // CY = current year
VAR NY = YEAR('Calendar'[Date]) + 1  // NY = next year
VAR PY = YEAR('Calendar'[Date]) - 1  // PY = previous year
VAR AcademicYear = IF(
	MONTH('Calendar'[Date]) >= 9, 
	CY & "/" & RIGHT(NY, 2), 
	PY & "/"& right(CY, 2)
	)
RETURN AcademicYear


Selected_semester = 
VAR _distinct_value_count = DISTINCTCOUNT('Calendar'[semester])
VAR _max_values2show = 5 
VAR result
IF (
_distinct_value_count > _max_values2show,
CONCATENATE(
CONCATENATEX(
TOPN( _max_values2show, VALUES('Calendar'[semester]), 'Calendar'[semester], ASC),
'Calendar'[semester],
", ",
'Calendar'[semester],
ASC
),
" jne. "
),
CONCATENATEX(VALUES('Calendar'[semester]),'Calendar'[semester], ", ", 'Calendar'[semester], ASC)
)

RETURN  result

Selected_kava = 
VAR _distinct_value_count = DISTINCTCOUNT(rls_PJ[kood])
VAR _max_values2show = 5
VAR result
IF(
_distinct_value_count > _max_values2show, 
CONCATENATE(
     CONCATENATEX(
          TOPN( _max_values2show, VALUES(rls_PJ[kood]), rls_PJ[kood], ASC), 
          kava[kava], 
          ", ", 
          kava[kava],
          ASC
          ),
     " jne. "
     ),
     CONCATENATEX(VALUES(rls_PJ[kood]), rls_PJ[kood], ", ", rls_PJ[kood], ASC)
)

RETURN result

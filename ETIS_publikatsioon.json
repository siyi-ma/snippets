{"name":"ETIS_publikatsioon","version":"1.0","culture":"en-US","modifiedTime":"2025-05-06T20:50:01.4149389+00:00","ppdf:outputFileFormat":"parquet","ppdf:dataflowId":"94be58e0-30ae-4b8d-bd92-8e0c397e6041","ppdf:owner":{"tenantId":"3efd4d88-9b88-4fc9-b6c0-c7ca50f1db57","userId":"84427c2b-9e9c-4069-a4ef-32e34b3e92fb"},"ppdf:fastCopy":true,"pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"_folder_M_teadus":{"queryId":"d305558c-1c86-49de-a239-5b733f9ccadf","queryName":"_folder_M_teadus","queryGroupId":"26cfc244-39a9-4fc9-939f-561ff5d4e2d5"},"_folder_T_Tunnustamine":{"queryId":"883da5a4-35a3-40a1-ae4e-55538ecbd9be","queryName":"_folder_T_Tunnustamine","queryGroupId":"26cfc244-39a9-4fc9-939f-561ff5d4e2d5"},"_folder_Teadusartikkel":{"queryId":"d96cc8b2-92eb-49c6-a2aa-4b511d34c45b","queryName":"_folder_Teadusartikkel","queryGroupId":"26cfc244-39a9-4fc9-939f-561ff5d4e2d5"},"_pubColNames":{"queryId":"28d541dd-05d2-4e4a-b12c-44263cc6e9aa","queryName":"_pubColNames","queryGroupId":"26cfc244-39a9-4fc9-939f-561ff5d4e2d5"},"_getETIS1_1_202324koond":{"queryId":"722da3cc-e42f-44f0-9100-5f817255773c","queryName":"_getETIS1_1_202324koond","queryGroupId":"51f244d7-7fdb-44f1-8237-9c673997bfb0"},"publication":{"queryId":"a2e03b28-7c8c-4486-b519-eded5eab0c9c","queryName":"publication","queryGroupId":"abccc510-07d3-404e-b4c4-ebfab0c223bf"},"ETIS2023_24_vana":{"queryId":"41f1fb15-11cc-49f4-96c1-208a8863bc37","queryName":"ETIS2023_24_vana"},"publications_2023_25":{"queryId":"786f5689-c449-404f-ad71-8b2903e2b252","queryName":"publications_2023_25","queryGroupId":"abccc510-07d3-404e-b4c4-ebfab0c223bf"},"ETIS_alates2018":{"queryId":"575ed9d5-3971-4671-8863-f8db99fe2e77","queryName":"ETIS_alates2018"},"faktETIS":{"queryId":"dfd456db-9cfc-418a-9018-be743c903b18","queryName":"faktETIS","loadEnabled":true},"faktETIS_researcher":{"queryId":"527b5b2c-857e-4ca8-852d-0f21da5ee92f","queryName":"faktETIS_researcher","loadEnabled":true},"instituut":{"queryId":"2a49230f-a125-412f-9722-d64e6862b7cf","queryName":"instituut","queryGroupId":"51f244d7-7fdb-44f1-8237-9c673997bfb0"},"tunnustusViimase3aasta":{"queryId":"9a80e877-c232-4d32-8a52-0960bb660162","queryName":"tunnustusViimase3aasta","queryGroupId":"bfaf015d-f01d-41e5-8569-4a76c966bb15"},"lookupERS":{"queryId":"aa2587a7-3ef5-46e0-a283-86e1cadd2f59","queryName":"lookupERS","queryGroupId":"bfaf015d-f01d-41e5-8569-4a76c966bb15"},"lookupJIF2023":{"queryId":"f6cf2a5d-b89f-415a-ae4a-9babf7c8aa2a","queryName":"lookupJIF2023","queryGroupId":"bfaf015d-f01d-41e5-8569-4a76c966bb15"},"lookupReplace":{"queryId":"d8474ddd-31ea-447d-be60-840eed2db6af","queryName":"lookupReplace","queryGroupId":"bfaf015d-f01d-41e5-8569-4a76c966bb15"},"lookupPO_toohoive":{"queryId":"bc66d079-1320-4420-9e18-03840d99d4f5","queryName":"lookupPO_toohoive","queryGroupId":"bfaf015d-f01d-41e5-8569-4a76c966bb15","loadEnabled":true},"lookupMDPI":{"queryId":"6efcf12c-a22d-4edc-a9d1-92bdd5fac01a","queryName":"lookupMDPI","queryGroupId":"bfaf015d-f01d-41e5-8569-4a76c966bb15"},"fnKoormus":{"queryId":"4a1e406d-396a-4766-bfb6-9e63de1ce0e8","queryName":"fnKoormus","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnTunnustus2023":{"queryId":"94f74634-e99c-4ae9-9ec4-572daf64af63","queryName":"fnTunnustus2023","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fn5aastaJIF":{"queryId":"02fd4c70-8390-43c7-aa94-192a301d08c9","queryName":"fn5aastaJIF","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnWoS_category":{"queryId":"68334835-f136-4bfd-9a33-69951a959293","queryName":"fnWoS_category","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnAddQ1":{"queryId":"a41b5477-da51-4327-aaad-b335109454ce","queryName":"fnAddQ1","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnAddTummik":{"queryId":"65e30042-5e25-4fad-85e4-8348c7254519","queryName":"fnAddTummik","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnDOItunnustus":{"queryId":"069ce94d-69ca-4ea6-b1b6-501dad1bddbc","queryName":"fnDOItunnustus","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnExtractETISpub":{"queryId":"04b027cd-68a9-4efa-aea5-c88522801bd6","queryName":"fnExtractETISpub","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnLookin":{"queryId":"15b385e9-eab8-4f91-8328-4253cf2bfcf8","queryName":"fnLookin","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"fnTuumik":{"queryId":"2f4bc2ce-3210-4e4a-ab21-854bf1cd963b","queryName":"fnTuumik","queryGroupId":"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67"},"_folder_ETIS_publikatsioonid":{"queryId":"3dc36957-09da-4af3-8f5a-dc954b471aab","queryName":"_folder_ETIS_publikatsioonid","queryGroupId":"26cfc244-39a9-4fc9-939f-561ff5d4e2d5"},"loadETIS_blankAutorid":{"queryId":"50e50631-1942-43c5-908f-9267d39ec0b9","queryName":"loadETIS_blankAutorid","queryGroupId":"26cfc244-39a9-4fc9-939f-561ff5d4e2d5","loadEnabled":true}},"document":"section Section1;\r\nshared _folder_M_teadus = let\n  Source = SharePoint.Contents(\"https://livettu.sharepoint.com/sites/M_Dashboard\"),\n  folderDocumsnts = Source{[Name = \"Documents\"]}[Content],\n  folderM_teadus = folderDocumsnts{[Name = \"M_teadus\"]}[Content]\nin\n  folderM_teadus;\r\nshared _folder_T_Tunnustamine = let\n  Source = SharePoint.Contents(\"https://livettu.sharepoint.com/sites/M_admin\"),\n  folderDocumsnts = Source{[Name = \"Documents\"]}[Content],\n  folderT_Tunnustamine = folderDocumsnts{[Name = \"T_Tunnustamine\"]}[Content]\nin\n  folderT_Tunnustamine;\r\nshared _folder_Teadusartikkel = let\n  Source = _folder_T_Tunnustamine,\n  Navigation = Source{[Name = \"2024 valimised\"]}[Content],\n  #\"Navigation 1\" = Navigation{[Name = \"Teadusartikkel 2024\"]}[Content],\n  #\"From Value\" = Table.FromValue(#\"Navigation 1\"),\n  #\"Remove Columns\" = Table.RemoveColumns(#\"From Value\", Table.ColumnsOfType(#\"From Value\", {type table, type record, type list, type nullable binary, type binary, type function}))\nin\n  #\"Remove Columns\";\r\nshared _pubColNames = let\n  Source = _folder_Teadusartikkel,\n  Navigation = Source{[Name = \"ETIS_1.1_2023_24_koond.xlsx\"]}[Content],\n  #\"Imported Excel workbook\" = Excel.Workbook(Navigation, null, true),\n  #\"Navigation 1\" = #\"Imported Excel workbook\"{[Item = \"list\", Kind = \"DefinedName\"]}[Data],\n  #\"Custom 1\" = Table.Range( #\"Navigation 1\", 0,9),\n  Custom = #\"Custom 1\"[Column1]\nin\n  Custom;\r\nshared _getETIS1_1_202324koond = let\n  Source = _folder_Teadusartikkel,\n  Navigation = Source{[Name = \"ETIS_1.1_2023_24_koond.xlsx\"]}[Content],\n  #\"Imported Excel workbook\" = Excel.Workbook(Navigation, null, true)\nin\n  #\"Imported Excel workbook\";\r\nshared publication = let\n  Source = _folder_Teadusartikkel,\n  getExcel = Source {[Name=\"Publications.xlsx\"]}[Content],\n  extractExcel = fnExtractETISpub(getExcel)\nin\n  extractExcel;\r\nshared ETIS2023_24_vana = let\n  Source = publication,\n  countrows =  Table.RowCount(Source),\n  #\"ETISautor_Wolfgang Dieter Gerstlberger\" = Table.ReplaceValue(Source, \"  ()\", \"Wolfgang Dieter Gerstlberger (Autor)\", Replacer.ReplaceValue, {\"autorid ETISe kontoga\"}),\n  #\"Filtered rows\" = Table.SelectRows(#\"ETISautor_Wolfgang Dieter Gerstlberger\", each [Aasta] >= 2023  )\nin\n  #\"Filtered rows\";\r\nshared publications_2023_25 = let\n    Source = _folder_Teadusartikkel,\n    getExcel = Excel.Workbook( Source {[Name=\"Publications_2023_25.xlsx\"]}[Content], true, true),\n    _workSheetName_Sheet = getExcel {[Item=\"_workSheetName\",Kind=\"Sheet\"]}[Data],\n    selectCols = Table.SelectColumns(_workSheetName_Sheet, _pubColNames),\n  #\"Replaced value\" = Table.ReplaceValue(selectCols, null, \"\", Replacer.ReplaceValue, {\"DOI\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced value\", {{\"Ajakiri / jätkuväljaanne\", type text}, {\"Lühikirje\", type text}, {\"Aasta\", Int64.Type}, {\"Autorid, kellel on ETISe konto\", type text}, {\"ISSN\", type text}, {\"DOI\", type text}, {\"Pealkiri\", type text}, {\"Autorid\", type text}, {\"GUID\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([ISSN] <> null)),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Filtered Rows\",{{\"ISSN\", Text.Trim, type text}}),\n  #\"Renamed columns\" = Table.RenameColumns(#\"Trimmed Text\", {{\"Autorid, kellel on ETISe konto\", \"autorid ETISe kontoga\"}}),\n  #\"Madison Winter Kurchik\" = Table.ReplaceValue(#\"Renamed columns\", \"M. Winter (Autor)\", \"Madison Winter Kurchik (Autor)\", Replacer.ReplaceValue, {\"autorid ETISe kontoga\"}),\n  #\"Sorted rows\" = Table.Sort(#\"Madison Winter Kurchik\", {{\"Ajakiri / jätkuväljaanne\", Order.Ascending}}),\n  add_mdpi = Table.AddColumn(#\"Sorted rows\", \"mdpi\", each let list0=List.Buffer(lookupMDPI[ISSN]), \nresult1 = List.PositionOf(list0, Text.BeforeDelimiter([ISSN], \";\")), result2 = List.PositionOf(list0, Text.Trim(Text.AfterDelimiter([ISSN], \";\"))), output = result1+ result2 in output, Int64.Type),\n  #\"Replaced value 1\" = Table.ReplaceValue(add_mdpi, \"\", \"NA\", Replacer.ReplaceValue, {\"DOI\"})\nin\n    #\"Replaced value 1\";\r\nshared ETIS_alates2018 = let\n  Source = publication,\n  #\"ETISautor_Wolfgang Dieter Gerstlberger\" = Table.ReplaceValue(Source, \"  ()\", \"Wolfgang Dieter Gerstlberger (Autor)\", Replacer.ReplaceValue, {\"autorid ETISe kontoga\"}),\n  #\"Replaced value\" = Table.ReplaceValue(#\"ETISautor_Wolfgang Dieter Gerstlberger\", \"25426605\", \"2542-6605\", Replacer.ReplaceText, {\"ISSN\"})\nin\n  #\"Replaced value\";\r\nshared faktETIS = let\n  Source = ETIS_alates2018, \n  add5aastaJIF = fn5aastaJIF(Source),\n  addCategory = fnWoS_category( add5aastaJIF),\n  addQ1 = fnAddQ1 (addCategory),\n  addTuumik = fnAddTummik (addQ1),\n  // Add \"ers\" column to calculate the count of rows in the \"lookupERS\" table that match the \"Pealkiri\"\n  addErs = Table.AddColumn(addTuumik, \"ers\", each \n        Table.RowCount(Table.SelectRows(\n                lookupERS, \n                (check) => Text.Contains([Pealkiri], check[ERS], Comparer.OrdinalIgnoreCase) // Case-insensitive match\n            )), Int64.Type),\n  addKoormus = fnKoormus(addErs),\n  addTunnustus = fnTunnustus2023(addKoormus)\n  // kasLisatud2025 = Table.TransformColumnTypes(Table.AddColumn(addTunnustus, \"lisatud2025\", each let list0 = ETIS2023_24_vana[GUID], result = List.PositionOf(list0, [GUID]) in result), {{\"lisatud2025\", Int64.Type}})\nin\n  addTunnustus;\r\nshared faktETIS_researcher = let\n  Source = ETIS_alates2018, \n  add5aastaJIF = fn5aastaJIF(Source),\n  addCategory = fnWoS_category( add5aastaJIF),\n  addQ1 = fnAddQ1 (addCategory),\n  addTuumik = fnAddTummik (addQ1),\n  // Add \"ers\" column to calculate the count of rows in the \"lookupERS\" table that match the \"Pealkiri\"\n  addErs = Table.AddColumn(addTuumik, \"ers\", each \n        Table.RowCount(Table.SelectRows(\n                lookupERS, \n                (check) => Text.Contains([Pealkiri], check[ERS], Comparer.OrdinalIgnoreCase) // Case-insensitive match\n            )), Int64.Type),\n  addDOItunnustus = fnDOItunnustus(addErs),\r\n  #\"Replaced value\" = Table.ReplaceValue(addDOItunnustus, \" (Autor)\", \"\", Replacer.ReplaceText, {\"autorid ETISe kontoga\"}),\r\n  #\"Trimmed text\" = Table.TransformColumns(#\"Replaced value\", {{\"autorid ETISe kontoga\", each Text.Clean(Text.Trim(_)), type nullable text}})\nin\n  #\"Trimmed text\";\r\nshared instituut = let\n    Source = _getETIS1_1_202324koond,\n    instituut = Source{[Name=\"instituut\"]}[Data],\n    #\"Changed Type\" = Table.PromoteHeaders( Table.TransformColumnTypes(instituut,{{\"Column1\", type text}, {\"Column2\", type text}}))\nin\n    #\"Changed Type\";\r\nshared tunnustusViimase3aasta = let\n  Source = _folder_T_Tunnustamine,\n  getExcel = Excel.Workbook( Source {[Name=\"Tunnustused majandusteaduskonnas_KOOND.xlsx\"]}[Content], true, true),\n  getSheet = getExcel {[Name=\"Publikatsioon\"]} [Data],\n  // addDOI_ = Table.TransformColumnTypes(Table.AddColumn(getSheet, \"DOI_\", each if [Aasta] = 2023 then [DOIuus] else [DOI]), {{\"DOI_\", type text}}),\n  selectCols = Table.SelectColumns(getSheet, {\"Aasta\", \"Autorid, kellel on ETIS-e konto\", \"Struktuuriüksus \", \"Tunnustus\" }),\n  changeColType = Table.TransformColumnTypes(selectCols, {{\"Aasta\", Int64.Type}, {\"Autorid, kellel on ETIS-e konto\", type text}, {\"Struktuuriüksus \", type text}, {\"Tunnustus\", type text}}),\n  viimase3aasta = let currentYear = Date.Year(DateTime.LocalNow()), result = Table.SelectRows(changeColType, each [Aasta] >= currentYear-3) in result,\n  #\"Renamed columns\" = Table.RenameColumns(viimase3aasta, {{\"Autorid, kellel on ETIS-e konto\", \"autorid ETISe kontoga\"}}),\n  #\"Split column by delimiter\" = Table.ExpandListColumn(Table.TransformColumns(#\"Renamed columns\", {{\"autorid ETISe kontoga\", Splitter.SplitTextByDelimiter(\";\"), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), \"autorid ETISe kontoga\"),\n  addNimikey = Table.AddColumn(#\"Split column by delimiter\", \"nimikey\", each let eesnimi = Text.AfterDelimiter([autorid ETISe kontoga], \",\"), \nperenimi = Text.BeforeDelimiter([autorid ETISe kontoga], \",\" ), nimi = eesnimi&perenimi, result = Text.Select(Text.Lower(nimi), {\"a\"..\"z\"}) in result,type text)\nin\n  addNimikey;\r\nshared lookupERS = let\n  Source = _getETIS1_1_202324koond,\n  Navigation = Source{[Item = \"ERS\", Kind = \"DefinedName\"]}[Data],\n  #\"Promoted headers\" = Table.PromoteHeaders(Navigation, [PromoteAllScalars = true]),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Promoted headers\", {{\"ERS\", type text}})\nin\n  #\"Changed column type\";\r\nshared lookupJIF2023 = let\n    Source = _folder_M_teadus,\n  Navigation = Source{[Name = \"WosJIF\"]}[Content],\n  #\"Navigation 1\" = Navigation{[Name = \"JIF2023.xlsx\"]}[Content],\n  #\"Imported Excel workbook\" = Excel.Workbook(#\"Navigation 1\", null, true),\n  data_Sheet = #\"Imported Excel workbook\"{[Item = \"data\", Kind = \"Sheet\"]}[Data],\n  #\"Removed Other Columns\" = Table.SelectColumns(data_Sheet,{\"Column1\", \"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\"}),\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed Other Columns\", each [Column1] <> null),\n  #\"Promoted headers\" = Table.PromoteHeaders(#\"Filtered rows\", [PromoteAllScalars = true]),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Promoted headers\", {{\"customISSN\", type text}, {\"data eISSN\", type text}, {\"5 aasta JIF\", type number}, {\"journal\", type text}, {\"category_\", type text}, {\"Q1_category\", type text}, {\"tuumik_pingerida\", type text}}),\n  #\"Replaced value\" = Table.ReplaceValue(#\"Changed column type\", null, \"NA\", Replacer.ReplaceValue, {\"Q1_category\"}),\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \"\", \"NA\", Replacer.ReplaceValue, {\"tuumik_pingerida\"})\nin\n    #\"Replaced value 1\";\r\nshared lookupReplace = let\n    Source = _getETIS1_1_202324koond, \n    getReplace = Source {[Name=\"replace\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(getReplace,{{\"Column1\", type text}, {\"Column2\", type text}}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Changed Type\", [PromoteAllScalars=true]),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"vana\", type text}, {\"uus\", type text}})\nin\n    #\"Changed Type1\";\r\nshared lookupPO_toohoive = let\n    Source = _folder_Teadusartikkel,\n    getExcel = Excel.Workbook( Source{[Name = \"SiyiMa_Päring_22.11.2024.xlsx\"]}[Content], true, true),\n    getSheet1 = getExcel{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data], \n    selectA = Table.SelectRows(getSheet1, each ([Ametikoha liik] = \"A\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(selectA,{\"Eesnimi\", \"Perenimi\", \"Instituut/Osakond\", \"Allüksus\", \"Hõive\", \"Ametikoht\"}),\n    #\"Merged Columns\" = Table.CombineColumns(#\"Removed Other Columns\",{\"Eesnimi\", \"Perenimi\"},Combiner.CombineTextByDelimiter(\" \", QuoteStyle.None),\"nimi\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Merged Columns\", {{\"Hõive\", type number}, {\"Instituut/Osakond\", type text}, {\"Allüksus\", type text}, {\"Ametikoht\", type text}}),\n    addPOnimikey = Table.AddColumn(#\"Changed Type\", \"POnimikey\", each Text.Select(Text.Lower([nimi]), {\"a\"..\"z\"}), type text),\n    #\"Renamed Columns\" = Table.RenameColumns(addPOnimikey,{{\"Instituut/Osakond\", \"instituut\"}, {\"Ametikoht\", \"ametinimetus\"}, {\"Hõive\", \"toohoive\"}}),\n    addInstituudiKood = Table.AddColumn(#\"Renamed Columns\", \"instituudiKood\", each List.Accumulate(\nList.Numbers(0, Table.RowCount(instituut)),\n[instituut],\n(state, current) =>\nText.Replace(state, \ninstituut[instituut]{current},\ninstituut[kood]{current})), type text),\n  #\"Removed other columns 1\" = Table.SelectColumns(addInstituudiKood, {\"POnimikey\", \"nimi\", \"ametinimetus\", \"instituudiKood\", \"toohoive\"})\nin\n    #\"Removed other columns 1\";\r\nshared lookupMDPI = let\n  Source = _folder_Teadusartikkel,\n  Navigation = Source{[Name = \"https___www.mdpi.com_about_jou.csv\"]}[Content],\n  #\"Imported CSV\" = Csv.Document(Navigation, [Delimiter = \",\", Columns = 17, QuoteStyle = QuoteStyle.Csv]),\n  #\"Removed other columns\" = Table.PromoteHeaders( Table.SelectColumns(#\"Imported CSV\", {\"Column2\", \"Column4\", \"Column6\", \"Column7\", \"Column8\"})),\n  Custom =   Table.RenameColumns(#\"Removed other columns\", {{\"lean href\", \"href\"}, {\"lean\", \"journalName\"}, {\" 2\", \"ISSN\"}, {\" 3\", \"Launched\"}, {\"show-for-large-up\", \"IF\"}}),\n  #\"Trimmed text\" = Table.TransformColumns(Custom, {{\"ISSN\", each Text.Clean( Text.Trim(_)), type nullable text}, {\"journalName\", each Text.Clean( Text.Trim(_)), type nullable text}})\nin\n  #\"Trimmed text\";\r\nshared fnKoormus = let\r\n  fnKoormus = (input as table) =>\nlet\n    addCustom = Table.AddColumn(input, \"Custom\", each \n        let \n            // Replace text based on a list of old and new values\n            replace = List.Accumulate(\n                List.Numbers(0, Table.RowCount(lookupReplace)),\n                [#\"autorid ETISe kontoga\"],\n                (state, current) => Text.Replace(state, lookupReplace[vana]{current}, lookupReplace[uus]{current})\n            ),\n            // Split the text by \"(Autor)\" and clean it\n            _split = Text.Split(replace, \"(Autor)\"),\n            result = List.RemoveItems(List.Transform(_split, each Text.Select(Text.Lower(_), {\"a\"..\"z\"})), {\"\"})\n        in \n            result, \n        type text\n    ),\n\n    // Combine the transformed text into a single string\n    extractValue = Table.TransformColumns(addCustom, {\"Custom\", each Text.Combine(List.Transform(_, Text.From), \" \"), type text}),\n\n    // Add a column with a table of matching rows from another table, and name it \"POtbl\"\n    addPOtbl = Table.AddColumn(extractValue, \"POtbl\", each \n        Table.SelectRows(\n            Table.Buffer(lookupPO_toohoive), \n            (check) => Text.Contains([Custom], check[POnimikey])\n        ), \n        type table\n    ),\n\n    // Add a column with concatenated author information from POtbl\n    addAutorinfo = Table.AddColumn(addPOtbl, \"autorinfo\", each \n        let \n            _table = [POtbl],\n            addInfo = Table.AddColumn(_table, \"custom\", each \n                let \n                    nimi = [nimi], \n                    instituut = [instituudiKood],\n                    ametinimetus = if Text.Start([ametinimetus], 9) = \"doktorant\" then [ametinimetus] else \"\",\n                    toohoive = Number.ToText([toohoive]),\n                    result = nimi & \" \" & instituut & \" \" & ametinimetus & \" \" & toohoive \n                in \n                    result\n            ),\n            _list = addInfo[custom],\n            result = Text.Combine(List.Transform(_list, Text.From), \"#(lf)\")\n        in \n            result, \n        type text\n    ),\n\n    // Add a column with the first institution code from POtbl\n    addInstituut = Table.AddColumn(addAutorinfo, \"instituut\", each \n        let \n            _table = [POtbl], \n            result = try Table.FirstN(_table, 1)[instituudiKood]{0} otherwise \"NA\"\n        in \n            result, \n        type text\n    ),\n\n    // Remove unnecessary columns and replace blank value with \"NA\" to improve data quality\n    clean = Table.ReplaceValue( Table.RemoveColumns(addInstituut, {\"Custom\", \"POtbl\"}), \"\", \"NA\", Replacer.ReplaceValue, {\"autorinfo\"})\nin\n    clean\r\nin\r\n  fnKoormus;\r\nshared fnTunnustus2023 = let\r\n  fnTunnustus2023 = (input as table)=>\nlet\n    // Split \"autorid ETISe kontoga\" column into a list by delimiter \";\" and expand the list\n    splitAutor = Table.ExpandListColumn(\n        Table.TransformColumns(\n            input, \n            {\n                {\"autorid ETISe kontoga\", \n                Splitter.SplitTextByDelimiter(\";\", QuoteStyle.None), \n                let \n                    itemType = (type nullable text) meta [Serialized.Text = true] \n                in \n                    type {itemType}}\n            }\n        ), \n        \"autorid ETISe kontoga\"\n    ),\n\n    // Add a column \"autorkey\" with cleaned and transformed text\n    addAutorkey = Table.AddColumn(\n        splitAutor, \n        \"autorkey\", \n        each \n            let\n                _replace = Text.Replace([autorid ETISe kontoga], \"(Autor)\", \"\"), // Remove \"(Autor)\"\n                _split = Text.Split(_replace, \"; \"), // Split the text by \"; \"\n                result = List.RemoveItems(\n                    List.Transform(\n                        _split, \n                        each Text.Select(Text.Lower(_), {\"a\"..\"z\"}) // Retain only lowercase alphabetic characters\n                    ), \n                    {\"\"} // Remove empty items\n                )\n            in \n                result, \n        type text\n    ),\n\n    // Combine the transformed list into a single text string\n    extractValue = Table.TransformColumns(\n        addAutorkey, \n        {\"autorkey\", each Text.Combine(_, \" \"), type text}\n    ),\n\n    // Add a column \"tunnustusTbl\" containing rows from \"tunnustusViimase3aasta\" that match \"autorkey\"\n    addTunnustusTbl = Table.AddColumn(\n        extractValue, \n        \"tunnustusTbl\", \n        each \n            Table.SelectRows(\n                Table.Buffer(tunnustusViimase3aasta), // Buffer the lookup table for better performance\n                (check) => Text.Contains([autorkey], check[nimikey]) // Check if \"autorkey\" contains \"nimikey\"\n            ), \n        type table\n    ),\n\n    // Add a column \"eelnevTunnustus\" with custom concatenated text based on matching rows\n    addEelnevTunnustus = Table.AddColumn(\n        addTunnustusTbl, \n        \"eelnevTunnustus\", \n        each \n            let \n                _table = Table.Buffer([tunnustusTbl]), // Buffer the column table for performance\n                addInfo = Table.AddColumn(\n                    _table, \n                    \"tunnus\", \n                    each \n                        let\n                            _autor = [autorid ETISe kontoga],\n                            _kommentaar = [Tunnustus] & Number.ToText([Aasta]),\n                            result = _autor & \" \" & _kommentaar,\n                            result1 = _autor & \" x2 \" & _kommentaar,\n                            output = if _autor = \"Vasileios Kostakis\" then result1 else result\n                        in \n                            output\n                ),\n                _list = Table.FirstN(addInfo, 1)[tunnus], // Extract the first result\n                result = Text.Combine(List.Transform(_list, Text.From), \" \") // Combine into a single string\n            in \n                result, \n        type text\n    ),\n\n    // Remove unnecessary intermediate columns\n    removeCols = Table.RemoveColumns(addEelnevTunnustus, {\"autorkey\", \"tunnustusTbl\"}),\n\n    // Group rows by specific columns into a table for further processing\n    groupRows = Table.Group(\n        removeCols, \n        {\"GUID\", \"Lühikirje\", \"Aasta\", \"Ajakiri / jätkuväljaanne\", \"Autorid\", \"Pealkiri\", \"DOI\", \"mdpi\", \"5_aasta_JIF\", \"category\" ,\"Q1\", \"tuumik\", \"ers\", \"autorinfo\", \"instituut\"}, \n        {{\"custom\", each _, type table}}\n    ),\n\n    // Add a column \"autorid ETISe kontoga\" by combining values from the grouped table\n    addAutor = Table.AddColumn(\n        groupRows, \n        \"autorid ETISe kontoga\", \n        each \n            let \n                _table = [custom], \n                _list = _table[autorid ETISe kontoga], \n                result = Text.Combine(List.Transform(_list, Text.From), \"; \") // Combine list into a single string\n            in \n                result, \n        type text\n    ),\n\n    // Add a column \"tunnustus\" by combining \"eelnevTunnustus\" values from the grouped table\n    addTunnustus = Table.AddColumn(\n        addAutor, \n        \"tunnustus\", \n        each \n            let \n                _table = Table.SelectRows([custom], each [eelnevTunnustus] <> \"\"), // Filter rows with non-empty \"eelnevTunnustus\"\n                _list = _table[eelnevTunnustus], \n                result =  try Text.Combine(List.Transform(_list, Text.From), \"#(lf)\") otherwise \"NA\" // Combine with line breaks\n            in \n                result, \n        type text\n    ),\n\n    // Remove the \"custom\" column, keeping only the required columns and replace Null value to improve data quality\n    clean =  Table.ReplaceValue( Table.RemoveColumns(addTunnustus, {\"custom\"}),  \"\", \"NA\", Replacer.ReplaceValue, {\"tunnustus\"})\nin\n    clean\r\nin\r\n  fnTunnustus2023;\r\nshared fn5aastaJIF = let\r\n  fn5aastaJIF = (input as table) => \nlet\n    // Buffer the lookup lists for performance\n    issnList = List.Buffer(lookupJIF2023[customISSN]),\n    eissnList = List.Buffer(lookupJIF2023[#\"data eISSN\"]),\n    jifList = List.Buffer(lookupJIF2023[#\"5 aasta JIF\"]),\n    addPosition = Table.AddColumn(input, \"position\", each let\n        issnResult1 = try List.PositionOf(issnList, Text.BeforeDelimiter([ISSN], \";\")) otherwise -10,\n        issnResult2 = try List.PositionOf(issnList, Text.Trim(Text.AfterDelimiter([ISSN], \";\"))) otherwise -10,\n        eissnResult1 = try List.PositionOf(eissnList, Text.BeforeDelimiter([ISSN], \";\")) otherwise -10,\n        eissnResult2 = try List.PositionOf(eissnList, Text.Trim(Text.AfterDelimiter([ISSN], \";\"))) otherwise -10,\n        output = if issnResult1 + issnResult2 + eissnResult1 + eissnResult2 = -40 then -10 else List.Max({issnResult1, issnResult2, eissnResult1, eissnResult2})\n        in output,  type number\n        ),\n    add5aastaJIF =Table.AddColumn(addPosition, \"5_aasta_JIF\", each try jifList{[position]} otherwise -10, Int64.Type),\n    replacenull = Table.ReplaceValue(add5aastaJIF, null, 0, Replacer.ReplaceValue, {\"5_aasta_JIF\"})\nin\n    replacenull\r\nin\r\n  fn5aastaJIF;\r\nshared fnWoS_category = let\r\n  fnWoS_category = (input as table) =>\nlet\n    categoryList = List.Buffer(lookupJIF2023[category_]),\n    addCategory = Table.AddColumn(\n        input,\n        \"category\",\n        each try categoryList {[position]} otherwise \"NA\", type text)\nin\n    addCategory\r\nin\r\n  fnWoS_category;\r\nshared fnAddQ1 = let\r\n  fnAddQ1 = (input as table) =>\nlet\n  q1List = List.Buffer(lookupJIF2023[Q1_category]), \n  addQ1 = Table.AddColumn(input, \"Q1\", each try q1List {[position]} otherwise \"NA\", type text )\nin \n  addQ1\r\nin\r\n  fnAddQ1;\r\nshared fnAddTummik = let\r\n  fnAddTummik = (input as table) =>\n  let \n    tuumikList = List.Buffer(lookupJIF2023[tuumik_pingerida]),\n    addTuumik = Table.AddColumn(input, \"tuumik\", each try tuumikList {[position]} otherwise \"NA\", type text),\n    replaceNull = Table.ReplaceValue(addTuumik, null, \"NA\", Replacer.ReplaceValue, {\"tuumik\"})\n  in\n    replaceNull\r\nin\r\n  fnAddTummik;\r\nshared fnDOItunnustus = let\r\n  fnDOItunnustus = (input as table)=>\nlet\n    // Split \"autorid ETISe kontoga\" column into a list by delimiter \";\" and expand the list\n    splitAutor = Table.ExpandListColumn(\n        Table.TransformColumns(\n            input, \n            {\n                {\"autorid ETISe kontoga\", \n                Splitter.SplitTextByDelimiter(\";\", QuoteStyle.None), \n                let \n                    itemType = (type nullable text) meta [Serialized.Text = true] \n                in \n                    type {itemType}}\n            }\n        ), \n        \"autorid ETISe kontoga\"\n    ),\n\n    // Add a column \"autorkey\" with cleaned and transformed text\n    addAutorkey = Table.AddColumn(\n        splitAutor, \n        \"autorkey\", \n        each \n            let\n                _replace = Text.Replace([autorid ETISe kontoga], \"(Autor)\", \"\"), // Remove \"(Autor)\"\n                _split = Text.Split(_replace, \"; \"), // Split the text by \"; \"\n                result = List.RemoveItems(\n                    List.Transform(\n                        _split, \n                        each Text.Select(Text.Lower(_), {\"a\"..\"z\"}) // Retain only lowercase alphabetic characters\n                    ), \n                    {\"\"} // Remove empty items\n                )\n            in \n                result, \n        type text\n    ),\n\n    // Combine the transformed list into a single text string\n    extractValue = Table.TransformColumns(\n        addAutorkey, \n        {\"autorkey\", each Text.Combine(_, \" \"), type text}\n    ),\n\n    // Add a column \"tunnustusTbl\" containing rows from \"tunnustusViimase3aasta\" that match \"autorkey\"\n    addTunnustusTbl = Table.AddColumn(\n        extractValue, \n        \"tunnustusTbl\", \n        each \n            Table.SelectRows(\n                Table.Buffer(tunnustusViimase3aasta), // Buffer the lookup table for better performance\n                (check) => Text.Contains([autorkey], check[nimikey]) // Check if \"autorkey\" contains \"nimikey\"\n            ), \n        type table\n    ),\n\n    // Add a column \"eelnevTunnustus\" with custom concatenated text based on matching rows\n    addEelnevTunnustus = Table.AddColumn(\n        addTunnustusTbl, \n        \"eelnevTunnustus\", \n        each \n            let \n                _table = Table.Buffer([tunnustusTbl]), // Buffer the column table for performance\n                addInfo = Table.AddColumn(\n                    _table, \n                    \"tunnus\", \n                    each \n                        let\n                            _autor = [autorid ETISe kontoga],\n                            _kommentaar = [Tunnustus] & Number.ToText([Aasta]),\n                            result = _autor & \" \" & _kommentaar,\n                            result1 = _autor & \" x2 \" & _kommentaar,\n                            output = if _autor = \"Vasileios Kostakis\" then result1 else result\n                        in \n                            output\n                ),\n                _list = Table.FirstN(addInfo, 1)[tunnus], // Extract the first result\n                result = Text.Combine(List.Transform(_list, Text.From), \" \") // Combine into a single string\n            in \n                result, \n        type text\n    ),\n\n    // Remove unnecessary intermediate columns\n    removeCols = Table.RemoveColumns(addEelnevTunnustus, {\"Lühikirje\", \"Autorid\", \"tunnustusTbl\", \"mdpi\", \"position\"}),\n\n    // Group rows by specific columns into a table for further processing\n    groupRows = Table.Group(\n        removeCols, \n        {\"GUID\", \"Lühikirje\", \"Aasta\", \"Ajakiri / jätkuväljaanne\", \"Autorid\", \"Pealkiri\", \"DOI\", \"mdpi\", \"5_aasta_JIF\", \"category\" ,\"Q1\", \"tuumik\", \"ers\", \"autorinfo\", \"instituut\"}, \n        {{\"custom\", each _, type table}}\n    ),\n\n    // Add a column \"autorid ETISe kontoga\" by combining values from the grouped table\n    addAutor = Table.AddColumn(\n        groupRows, \n        \"autorid ETISe kontoga\", \n        each \n            let \n                _table = [custom], \n                _list = _table[autorid ETISe kontoga], \n                result = Text.Combine(List.Transform(_list, Text.From), \"; \") // Combine list into a single string\n            in \n                result, \n        type text\n    ),\n\n    // Add a column \"tunnustus\" by combining \"eelnevTunnustus\" values from the grouped table\n    addTunnustus = Table.AddColumn(\n        addAutor, \n        \"tunnustus\", \n        each \n            let \n                _table = Table.SelectRows([custom], each [eelnevTunnustus] <> \"\"), // Filter rows with non-empty \"eelnevTunnustus\"\n                _list = _table[eelnevTunnustus], \n                result =  try Text.Combine(List.Transform(_list, Text.From), \"#(lf)\") otherwise \"NA\" // Combine with line breaks\n            in \n                result, \n        type text\n    ),\n\n    // Remove the \"custom\" column, keeping only the required columns and replace Null value to improve data quality\n    clean =  Table.ReplaceValue( Table.RemoveColumns(addTunnustus, {\"custom\"}),  \"\", \"NA\", Replacer.ReplaceValue, {\"tunnustus\"})\nin\n    removeCols\r\nin\r\n  fnDOItunnustus;\r\nshared fnExtractETISpub = let\r\n  fnExtractETISpub = (input as binary) =>\nlet\nSource = input, \ngetExcel = Excel.Workbook(Source, true, true),\n    _workSheetName_Sheet = getExcel {[Item=\"_workSheetName\",Kind=\"Sheet\"]}[Data],\n    selectCols = Table.SelectColumns(_workSheetName_Sheet, _pubColNames),\n  #\"Replaced value\" = Table.ReplaceValue(selectCols, null, \"\", Replacer.ReplaceValue, {\"DOI\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced value\", {{\"Ajakiri / jätkuväljaanne\", type text}, {\"Lühikirje\", type text}, {\"Aasta\", Int64.Type}, {\"Autorid, kellel on ETISe konto\", type text}, {\"ISSN\", type text}, {\"DOI\", type text}, {\"Pealkiri\", type text}, {\"Autorid\", type text}, {\"GUID\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([ISSN] <> null)),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Filtered Rows\",{{\"ISSN\", Text.Trim, type text}}),\n  #\"Renamed columns\" = Table.RenameColumns(#\"Trimmed Text\", {{\"Autorid, kellel on ETISe konto\", \"autorid ETISe kontoga\"}}),\n  #\"Madison Winter Kurchik\" = Table.ReplaceValue(#\"Renamed columns\", \"M. Winter (Autor)\", \"Madison Winter Kurchik (Autor)\", Replacer.ReplaceValue, {\"autorid ETISe kontoga\"}),\n  #\"Sorted rows\" = Table.Sort(#\"Madison Winter Kurchik\", {{\"Ajakiri / jätkuväljaanne\", Order.Ascending}}),\n  add_mdpi = Table.AddColumn(#\"Sorted rows\", \"mdpi\", each let list0=List.Buffer(lookupMDPI[ISSN]), \nresult1 = List.PositionOf(list0, Text.BeforeDelimiter([ISSN], \";\")), result2 = List.PositionOf(list0, Text.Trim(Text.AfterDelimiter([ISSN], \";\"))), output = result1+ result2 in output, Int64.Type),\n  #\"Replaced value 1\" = Table.ReplaceValue(add_mdpi, \"\", \"NA\", Replacer.ReplaceValue, {\"DOI\"})\nin\n    #\"Replaced value 1\"\r\nin\r\n  fnExtractETISpub;\r\nshared fnLookin = let\r\n  fnLookin = (lookinTbl as table, keywordTbl as table, lookinCol as text, keywordCol as text) =>\n\nlet\n    relativeMerge  = Table.AddColumn(lookinTbl, \"relativeMerge\", \n(earlier) => Table.SelectRows(keywordTbl, each Text.Contains(Record.Field(earlier, lookinCol),\nRecord.Field(_, keywordCol),\nComparer.OrdinalIgnoreCase))),\nexpandRelativeMerge = Table.ExpandTableColumn(relativeMerge, \"relativeMerge\", {keywordCol},{\"keyword found\"}),\nfilterRows = Table.SelectRows(expandRelativeMerge, each [keyword found]<> null and [keyword found]<>\"\"),\nremoveColumn = Table.RemoveColumns(filterRows, {\"keyword found\"})\nin removeColumn\r\nin\r\n  fnLookin;\r\nshared fnTuumik = let\r\n  fnTuumik = (source as table) =>\nlet\n    Custom1 = Table.PromoteHeaders( Table.SelectColumns( Table.SelectRows(source, each [Column1] <> null and [Column1] <> \"\"), {\"Column1\", \"Column2\", \"Column3\", \"Column4\"})),\n    #\"Changed Type\" = Table.TransformColumnTypes(Custom1,{{\"pingerida\", Int64.Type}, {\"Ajakirja nimi\", type text}, {\"ISSN_\", type text}, {\"5 aasta JIF\", type number}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Changed Type\", \"tuumik\", each try source[Column2]{0} otherwise \"NA\", type text)\nin\n    #\"Added Custom\"\r\nin\r\n  fnTuumik;\r\nshared _folder_ETIS_publikatsioonid = let\r\n  Source = _folder_M_teadus,\r\n  Navigation = Source{[Name = \"ETIS_publikatsioonid\"]}[Content]\r\nin\r\n  Navigation;\r\nshared loadETIS_blankAutorid = let\r\n  Source = _folder_ETIS_publikatsioonid,\r\n  Navigation = Source{[Name = \"ETIS_blankAutorid.csv\"]}[Content],\r\n  #\"Imported CSV\" = Csv.Document(Navigation, [Delimiter = \",\", Columns = 3, Encoding = 65001, QuoteStyle = QuoteStyle.None]),\r\n  #\"Promoted headers\" = Table.PromoteHeaders(#\"Imported CSV\", [PromoteAllScalars = true]),\r\n  #\"Grouped rows\" = Table.Group(#\"Promoted headers\", {\"autorid ETISe kontoga\"}, {{\"pubin2025\", each List.Contains(_[Aasta], \"2025\"), type logical}, {\"pubin2025or24\", each List.ContainsAny(_[Aasta], {\"2025\", \"2024\"}), type logical}, {\"pubinlast3years\", each List.ContainsAny(_[Aasta], {\"2025\", \"2024\", \"2023\"}), type logical}}),\r\n  #\"Filtered rows\" =  Table.Sort(Table.RemoveColumns(Table.SelectRows(#\"Grouped rows\", each ([pubinlast3years] = true)), {\"pubinlast3years\"}),{{\"pubin2025\", Order.Descending}, {\"pubin2025or24\", Order.Descending}, {\"autorid ETISe kontoga\", Order.Ascending}})\r\nin\r\n  #\"Filtered rows\";\r\n","connectionOverrides":[{"path":"https://livettu.sharepoint.com/sites/M_admin","kind":"SharePoint","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"SharePoint\",\"path\":\"https://livettu.sharepoint.com/sites/M_admin\"}","audience":null},{"path":"https://livettu.sharepoint.com/","kind":"SharePoint","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"SharePoint\",\"path\":\"https://livettu.sharepoint.com/\"}","audience":null}]},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"Id\":\"26cfc244-39a9-4fc9-939f-561ff5d4e2d5\",\"Name\":\"sourceFolder\",\"Description\":\"\",\"ParentId\":null,\"Order\":0},{\"Id\":\"9eb67bde-4fb1-48b7-91fe-877cbbc4cb67\",\"Name\":\"customFx\",\"Description\":\"\",\"ParentId\":null,\"Order\":1},{\"Id\":\"51f244d7-7fdb-44f1-8237-9c673997bfb0\",\"Name\":\"stage_getETIS1_1_202324koond\",\"Description\":\"\",\"ParentId\":null,\"Order\":2},{\"Id\":\"abccc510-07d3-404e-b4c4-ebfab0c223bf\",\"Name\":\"publications\",\"Description\":\"\",\"ParentId\":null,\"Order\":3},{\"Id\":\"bfaf015d-f01d-41e5-8569-4a76c966bb15\",\"Name\":\"lookup\",\"Description\":\"custom functions\",\"ParentId\":null,\"Order\":1}]"}],"entities":[{"$type":"LocalEntity","name":"faktETIS","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"faktETIS.parquet"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"},{"name":"ppdf:entityKeys","value":"[{\"columns\":[\"GUID\",\"Lühikirje\",\"Aasta\",\"Ajakiri / jätkuväljaanne\",\"Autorid\",\"Pealkiri\",\"DOI\",\"mdpi\",\"5_aasta_JIF\",\"category\",\"Q1\",\"tuumik\",\"ers\",\"autorinfo\",\"instituut\"]}]"}],"attributes":[{"name":"GUID","dataType":"string"},{"name":"Lühikirje","dataType":"string"},{"name":"Aasta","dataType":"int64"},{"name":"Ajakiri / jätkuväljaanne","dataType":"string"},{"name":"Autorid","dataType":"string"},{"name":"Pealkiri","dataType":"string"},{"name":"DOI","dataType":"string"},{"name":"mdpi","dataType":"int64"},{"name":"5_aasta_JIF","dataType":"double"},{"name":"category","dataType":"string"},{"name":"Q1","dataType":"string"},{"name":"tuumik","dataType":"string"},{"name":"ers","dataType":"int64"},{"name":"autorinfo","dataType":"string"},{"name":"instituut","dataType":"string"},{"name":"autorid ETISe kontoga","dataType":"string"},{"name":"tunnustus","dataType":"string"}]},{"$type":"LocalEntity","name":"faktETIS_researcher","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"faktETIS_researcher.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"GUID","dataType":"string"},{"name":"ISSN","dataType":"string"},{"name":"Aasta","dataType":"int64"},{"name":"Ajakiri / jätkuväljaanne","dataType":"string"},{"name":"autorid ETISe kontoga","dataType":"string"},{"name":"Pealkiri","dataType":"string"},{"name":"DOI","dataType":"string"},{"name":"5_aasta_JIF","dataType":"double"},{"name":"category","dataType":"string"},{"name":"Q1","dataType":"string"},{"name":"tuumik","dataType":"string"},{"name":"ers","dataType":"int64"},{"name":"autorkey","dataType":"string"},{"name":"eelnevTunnustus","dataType":"string"}]},{"$type":"LocalEntity","name":"lookupPO_toohoive","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"lookupPO_toohoive.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"POnimikey","dataType":"string"},{"name":"nimi","dataType":"string"},{"name":"ametinimetus","dataType":"string"},{"name":"instituudiKood","dataType":"string"},{"name":"toohoive","dataType":"double"}]},{"$type":"LocalEntity","name":"loadETIS_blankAutorid","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"loadETIS_blankAutorid.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[{\"columns\":[\"autorid ETISe kontoga\"]}]"}],"attributes":[{"name":"autorid ETISe kontoga","dataType":"string"},{"name":"pubin2025","dataType":"boolean"},{"name":"pubin2025or24","dataType":"boolean"}]}]}
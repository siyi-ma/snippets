{"name":"OIS_LT_prognoos","version":"1.0","culture":"en-US","modifiedTime":"2025-05-08T21:20:16.996832+00:00","ppdf:outputFileFormat":"parquet","ppdf:dataflowId":"83a21b22-7d6a-4f2d-8ed9-b5cc87b79fab","ppdf:owner":{"tenantId":"3efd4d88-9b88-4fc9-b6c0-c7ca50f1db57","userId":"84427c2b-9e9c-4069-a4ef-32e34b3e92fb"},"ppdf:fastCopy":true,"pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"DefaultDestination":{"queryId":"51e2e589-248e-4291-83d7-644fd62344ab","queryName":"DefaultDestination"},"_folderOISX_opingukavaOtsing_alates23S":{"queryId":"8c978650-18d1-49dd-b335-60ce374e1474","queryName":"_folderOISX_opingukavaOtsing_alates23S","queryGroupId":"036c6d12-63c8-4d7c-aca9-f8787563be90"},"_folderOisCsv":{"queryId":"0bd4c87f-42e7-48b8-8e66-e88c205291f6","queryName":"_folderOisCsv","queryGroupId":"036c6d12-63c8-4d7c-aca9-f8787563be90"},"_folderOisOtsingLT":{"queryId":"213a67d1-3741-499f-93d4-eb774c6270f4","queryName":"_folderOisOtsingLT","queryGroupId":"036c6d12-63c8-4d7c-aca9-f8787563be90"},"_folderA_A_Statistika":{"queryId":"c3cbbf54-6621-4650-918c-e11c7b3239bc","queryName":"_folderA_A_Statistika","queryGroupId":"036c6d12-63c8-4d7c-aca9-f8787563be90"},"fakt_OIS_data":{"queryId":"2aee4a08-9bf2-4121-8bae-561581ce1255","queryName":"fakt_OIS_data","loadEnabled":true},"fakt_OISXopingukava":{"queryId":"701480e3-a0dc-40ff-9eb5-662b14c5d425","queryName":"fakt_OISXopingukava","loadEnabled":true},"fn_oisXopingukava":{"queryId":"14ed4139-0aa7-4b7b-b69c-54c3106e19fc","queryName":"fn_oisXopingukava","queryGroupId":"35fbd4db-c26e-45da-ae24-a911f4981733"},"fnHAAB_HHX0051":{"queryId":"dc82f027-9990-413a-9a40-e7a687dc05c9","queryName":"fnHAAB_HHX0051","queryGroupId":"35fbd4db-c26e-45da-ae24-a911f4981733"},"append_HAAB_HHX0051_dekla_oisX":{"queryId":"7a9f5b6c-83ea-438d-ab77-5eafd20527eb","queryName":"append_HAAB_HHX0051_dekla_oisX"},"fn_oisXopingukava_23S_24K":{"queryId":"5a665345-5032-4800-80a8-4c28baaaac79","queryName":"fn_oisXopingukava_23S_24K","queryGroupId":"35fbd4db-c26e-45da-ae24-a911f4981733"},"fakt_ois_lopetanud_alates2023":{"queryId":"af6f89b6-9ce7-4787-b58a-7bddf9c14d64","queryName":"fakt_ois_lopetanud_alates2023"},"fakt_OISXopingukava_immatkp":{"queryId":"d2e9c2d0-2cf4-4cad-b050-10760f97d375","queryName":"fakt_OISXopingukava_immatkp","loadEnabled":true},"test_OISXopingukava_immatkp":{"queryId":"1bbb8f6b-2db2-4f80-a9e0-0ea01b87b9e3","queryName":"test_OISXopingukava_immatkp"},"_folderOIS":{"queryId":"5041d63b-cfb2-40a1-bfdb-c5ded8625262","queryName":"_folderOIS","queryGroupId":"036c6d12-63c8-4d7c-aca9-f8787563be90"},"getKavajuhiinstituut":{"queryId":"cda611e0-1325-4085-a32c-ca0ca7313c0b","queryName":"getKavajuhiinstituut"},"dim_oisKava":{"queryId":"49c9e49c-c264-4e30-b73e-1a895c04a3e2","queryName":"dim_oisKava","loadEnabled":true},"intl":{"queryId":"079ae5f8-e9db-4bb7-bf93-1aabf1f344e0","queryName":"intl"},"_folderOISX_opingukavaOtsing_alates23S_DataDestination":{"queryId":"df576ac4-dc7b-4773-b61b-008f800bdd73","queryName":"_folderOISX_opingukavaOtsing_alates23S_DataDestination"},"_folderOISX_opingukavaOtsing_alates23S_WriteToDataDestination":{"queryId":"189b5a1b-4538-45b9-bfd9-6c13b593e8b7","queryName":"_folderOISX_opingukavaOtsing_alates23S_WriteToDataDestination"},"_folderOISX_opingukavaOtsing_alates23S_TransformForWriteToDataDestination":{"queryId":"98599708-6e45-4dd3-bb0a-e554fac8e238","queryName":"_folderOISX_opingukavaOtsing_alates23S_TransformForWriteToDataDestination"},"DefaultStaging":{"queryId":"707597fb-269e-4e83-80ee-73b6719f56e5","queryName":"DefaultStaging"},"FastCopyStaging":{"queryId":"f54b266e-46e7-4eb8-bc23-38d6b2582e6d","queryName":"FastCopyStaging"},"append_HAAB_HHX0051_dekla_oisX_DataDestination":{"queryId":"cca37248-b1b5-475b-b541-e31cc7997832","queryName":"append_HAAB_HHX0051_dekla_oisX_DataDestination"},"append_HAAB_HHX0051_dekla_oisX_WriteToDataDestination":{"queryId":"f4259912-2fcc-4f9e-a0dd-b2eb762d67b3","queryName":"append_HAAB_HHX0051_dekla_oisX_WriteToDataDestination"},"append_HAAB_HHX0051_dekla_oisX_TransformForWriteToDataDestination":{"queryId":"f7697105-f822-404b-863a-0f0d39d05ac5","queryName":"append_HAAB_HHX0051_dekla_oisX_TransformForWriteToDataDestination"},"fakt_ois_lopetanud_alates2023_DataDestination":{"queryId":"d5bd0feb-1f37-437b-983a-bf715a9536a5","queryName":"fakt_ois_lopetanud_alates2023_DataDestination"},"fakt_ois_lopetanud_alates2023_WriteToDataDestination":{"queryId":"efdb75d6-8278-4d18-8a28-3463926dc0ea","queryName":"fakt_ois_lopetanud_alates2023_WriteToDataDestination"},"fakt_ois_lopetanud_alates2023_TransformForWriteToDataDestination":{"queryId":"6b4b0872-77ad-4a96-99ba-fa1f3140353b","queryName":"fakt_ois_lopetanud_alates2023_TransformForWriteToDataDestination"}},"document":"section Section1;\r\nshared DefaultDestination = let\r\n  DefaultDestination = FabricSql.Contents(null){[workspaceId = \"b9ba0143-b2c1-4295-a8d9-0844282bd555\"]}[Data]{[sqlId = \"e9875463-5caf-47fd-9da1-3364d34428ce\"]}[Data]\r\nin\r\n  DefaultDestination;\r\nshared _folderOISX_opingukavaOtsing_alates23S = let\n    Source = _folderOIS,\n    OISX_opingukavaOtsing_alates23S = Source{[Name=\"OISX_opingukavaOtsing_alates23S\"]}[Content],\n  #\"Filtered rows\" = Table.SelectRows(OISX_opingukavaOtsing_alates23S, each ([Name] <> \"õpingukavade_otsing_2025-02-12T20_22_57_25K.xlsx\"))\nin\n    #\"Filtered rows\";\r\nshared _folderOisCsv = let\n    Source = _folderOIS,\n    folderCsv = Source {[Name=\"csv\"]}[Content]\nin\n    folderCsv;\r\nshared _folderOisOtsingLT = let\r\n  Source = _folderOisCsv,\r\n  Navigation = Source{[Name = \"LopetamiseTulemuslikkus\"]}[Content],\r\n  #\"Sorted rows\" = Table.Sort(Navigation, {{\"Date created\", Order.Descending}})\r\nin\r\n  #\"Sorted rows\";\r\nshared _folderA_A_Statistika = let\n    Source = SharePoint.Contents(\"https://livettu.sharepoint.com/sites/M_admin\"),\n    Documents = Source{[Name=\"Documents\"]}[Content],\n    A_A_Statistika = Documents{[Name=\"A_A_Statistika\"]}[Content]\nin \n    A_A_Statistika;\r\nshared fakt_OIS_data = let\nSource = _folderOisOtsingLT,\ngetCsv = Source{0}[Content],\nextractCsv = Table.PromoteHeaders( Csv.Document(getCsv,[Delimiter=\";\", Columns=29, Encoding=65001, QuoteStyle=QuoteStyle.None])),\nchangeColType = Table.TransformColumnTypes(extractCsv,{{\"sünnikuupäev\", type date}, {\"immatrikuleerimise kuupäev\", type date}, {\"viimane täiskoormuselt osakoormusele viimise kuupäev  \", type date}, {\"eksmatrikuleerimise kuupäev\", type date}, {\"viimane osakoormuselt täiskoormusele viimise kuupäev\", type date}, {\"akad. puhkusel sem. arv\", Int64.Type}, {\"õpitud semestrite arv\", Int64.Type}, {\"SEL\", Int64.Type}, {\"EAP\", type number}, {\"KKH (EAP)\", type number}, {\"ennistamise kuupäev\", type date}}, \"de-DE\"),\nfilterRows = Table.SelectRows( changeColType, each not List.Contains({\"TAKM\", \"TASB\", \"TASM\"}, Text.Start([#\"õppekava versiooni kood\"], 4))),\naddVanu = Table.AddColumn(filterRows, \"vanu\", each \n    let _date = \"1/9/\"&[sisseastumisaasta],\n        _calDate = Date.From(_date), \n        _duration = Number.From(_calDate-[sünnikuupäev]), \n        result = Number.RoundUp(_duration/365) \n    in result, Int64.Type),\nremoveCols = Table.RemoveColumns(addVanu,{\"\", \"sünnikuupäev\", \"finantseerimisallikas\", \"finantsallika täpsustus\", \"sihtstipendium\", \"viimane osakoormuselt täiskoormusele viimise kuupäev\", \"viimane täiskoormuselt osakoormusele viimise kuupäev  \", \"SEL\"}),\n    // 2022/23 õa tulemuslikkuse arvesse lähevad 4-aastase nominaalajaga DOK kavad, millel toimus vastuvõtt 2017/18 õa; 3-aastase nominaalajaga BAK kavad, millel toimus vastuvõtt 2019/20 õa; 2-aastase nominaalajaga MAG kavad, millel toimus vastuvõtt 2020/21 õa. \naddAruanneAasta = Table.AddColumn(removeCols, \"auranneAasta\", each \n    let \n      _sisseaasta = Number.FromText([sisseastumisaasta]), _tase = Text.Middle([õppekava versiooni kood],3,1),  nomPlusN = if _tase=\"D\" then 5 else if _tase=\"M\" then 2 else if _tase =\"B\" then 3 else 0, \n      aruanneAastaP1 = _sisseaasta + nomPlusN, aruanneAastaP2 = aruanneAastaP1+1,\n      P1 = Number.ToText(aruanneAastaP1), P2= Text.End(Number.ToText(aruanneAastaP2),2), P3 = Number.ToText(aruanneAastaP1+1), P4 = Text.End(Number.ToText(aruanneAastaP2+1),2),\n      nov10 = #date(Number.FromText([sisseastumisaasta]), 11, 10), \n      result = if [immatrikuleerimise kuupäev]<= nov10 then P1&\"/\"&P2 else P3&\"/\"&P4 in result, type text),\naddStaatus = Table.AddColumn(addAruanneAasta, \"staatus\", each \n  let \n    nov10 = #date(Number.FromText([sisseastumisaasta]), 11, 10),\n    _tase = Text.Middle([õppekava versiooni kood],3,1), \n    nom = if _tase =\"B\" then 3 else if _tase =\"M\" then 2 else if _tase =\"D\" then 4 else 0, \n    nomPlus0_5 = if _tase =\"B\" then 3.5 else if _tase =\"M\" then 2.5 else if _tase =\"D\" then 4.5 else 0, \n    nomPlus1 = if _tase =\"B\" then 4 else if _tase =\"M\" then 3 else if _tase =\"D\" then 5 else 0, \n    nomPlus1_5 = if _tase =\"B\" then 4.5 else if _tase =\"M\" then 3.5 else if _tase =\"D\" then 5.5 else 0, \n    nomPlus2 = if _tase =\"B\" then 5 else if _tase =\"M\" then 4 else if _tase =\"D\" then 6 else 0, \n    nomPlus2_5 = if _tase =\"B\" then 5.5 else if _tase =\"M\" then 4.5 else if _tase =\"D\" then 6.5 else 0, \n    nomPlus3 = if _tase =\"B\" then 6 else if _tase =\"M\" then 5 else if _tase =\"D\" then 7 else 0, \n    nom_cutoff = Date.AddDays([immatrikuleerimise kuupäev], nom*365),\n    nomPlus0_5_cutoff = Date.AddDays([immatrikuleerimise kuupäev], Number.Round(nomPlus0_5*365,0)),\n    nomPlus1_cutoff =  Date.AddDays([immatrikuleerimise kuupäev], nomPlus1*365),\n    nomPlus1_5_cutoff =  Date.AddDays([immatrikuleerimise kuupäev], Number.RoundUp(nomPlus1_5*365,0)),\n    nomPlus2_cutoff =  Date.AddDays([immatrikuleerimise kuupäev], nomPlus2*365), \n    result = if [eksmatrikuleerimise kuupäev] = null then \"jaiOppima\" \n      else if [eksmatrikuleerimise kuupäev]<= nov10 then \"jah\" \n      else if [lõpetanud]=\"jah\" and [eksmatrikuleerimise kuupäev] <= nom_cutoff  then \"nom\" \n      else if  [lõpetanud]=\"jah\" and [eksmatrikuleerimise kuupäev] <= nomPlus0_5_cutoff   then \"nom+.5\" \n      else if  [lõpetanud]=\"jah\" and [eksmatrikuleerimise kuupäev] <= nomPlus1_cutoff then \"nom+1\" \n      else if  [lõpetanud]=\"jah\" and [eksmatrikuleerimise kuupäev] <= nomPlus1_5_cutoff then \"nom+1.5\"\n      else if  [lõpetanud]=\"jah\" and [eksmatrikuleerimise kuupäev] <= nomPlus2_cutoff   then \"nom+2\"\n      else if  [lõpetanud]=\"jah\" and [eksmatrikuleerimise kuupäev] > nomPlus2_cutoff then \">nom+2\" \n      else \"valjalangevus\" in result, type text),\naddEksmatQuarter = Table.AddColumn(addStaatus, \"eksmatQuarter\", each Date.QuarterOfYear([eksmatrikuleerimise kuupäev]), Int64.Type)\nin\n  addEksmatQuarter;\r\nshared fakt_OISXopingukava = let\n    Source = Table.SelectRows( _folderOISX_opingukavaOtsing_alates23S, each Text.StartsWith([Name], \"õpingukavade_otsing_\")),\n    #\"Added Custom\" = Table.AddColumn(Source, \"Custom\", each if Text.Contains([Name], \"23S\") or Text.Contains([Name], \"24K\") then fn_oisXopingukava_23S_24K([Content]) else  fn_oisXopingukava([Content])),\n  Custom = Table.Combine( #\"Added Custom\"[Custom]),\n    #\"Appended Query\" = Table.Combine({Custom, append_HAAB_HHX0051_dekla_oisX}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Appended Query\",\"sÃ¼gis\",\"sügis\",Replacer.ReplaceText,{\"Semester\"}),\n    addKava = Table.AddColumn(#\"Replaced Value\", \"kava\", each Text.Middle([yliopilaskood],6,4), type text),\n    addTase = Table.AddColumn(addKava, \"tase\", each let _value = Text.End([kava],1) ,\nresult = if _value =\"B\" then \"BAK\" else if _value = \"M\"then \"MAG\" else if _value = \"D\" then \"DOK\" else if _value= \"R\" then \"RAK\" else \"NA\" in result, type text),\n    addSisseastumisaasta = Table.AddColumn(addTase, \"sisseastumisaasta\", each Number.From(\"20\"&Text.Start([yliopilaskood],2)), Int64.Type),\n    #\"Merged Queries\" = Table.NestedJoin(addSisseastumisaasta, {\"yliopilaskood\"}, fakt_ois_lopetanud_alates2023, {\"üliõpilaskood\"}, \"fakt_loputoo_alates_2023\", JoinKind.LeftOuter),\n    #\"Expanded fakt_loputoo_alates_2024\" = Table.ExpandTableColumn(#\"Merged Queries\", \"fakt_loputoo_alates_2023\", {\"eksmatrikuleerimise kuupäev\"}, {\"lopetanuteKP\"})\n  // selectKava =  Table.SelectRows( #\"Expanded fakt_loputoo_alates_2024\", each Text.StartsWith([yliopilaskood], \"22\") and Text.EndsWith([yliopilaskood], \"TARM\") and [Semester] = \"2024/2025 kevad\")\nin\n    #\"Expanded fakt_loputoo_alates_2024\";\r\nshared fn_oisXopingukava = let\r\n  fn_oisXopingukava = (source as binary) => \nlet \n importExcel = Excel.Workbook(source),\n    opingukavad_Sheet = importExcel{[Item=\"õpingukavad\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Columns\" = Table.RemoveColumns(opingukavad_Sheet,{\"Column9\", \"Column10\", \"Column11\", \"Column3\", \"Column4\", \"Column6\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Columns\", [PromoteAllScalars=true]),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Promoted Headers\",{{\"üliõpilaskood\", \"yliopilaskood\"}}),\n    selectCols = Table.SelectColumns(#\"Renamed Columns\",  {\"Semester\", \"yliopilaskood\", \"Aineid kokku\", \"EAP hulk\"}), \n    #\"Changed Type\" = Table.TransformColumnTypes(selectCols,{{\"Semester\", type text}, {\"yliopilaskood\", type text}, {\"Aineid kokku\", Int64.Type}, {\"EAP hulk\", Int64.Type}})\nin\n    #\"Changed Type\"\r\nin\r\n  fn_oisXopingukava;\r\nshared fnHAAB_HHX0051 = let\r\n  fnHAAB_HHX0051 = (input as binary) =>\nlet\n    Source = input, \n    importExcel = Excel.Workbook(input, true),\n    Sheet1_Sheet = importExcel{0}[Data],\n    renameCol = try Table.RenameColumns(Sheet1_Sheet,{{\"Üliõpilaskood\", \"yliopilaskood\"}}) otherwise Table.RenameColumns(Sheet1_Sheet,{{\"üliõpilaskood\", \"yliopilaskood\"}}),\n    selectCol= Table.SelectColumns(renameCol,{\"Semester\", \"yliopilaskood\"})\nin\n    selectCol\r\nin\r\n  fnHAAB_HHX0051;\r\nshared append_HAAB_HHX0051_dekla_oisX = let\n    Source = Table.SelectRows( _folderOISX_opingukavaOtsing_alates23S, each Text.StartsWith([Name], \"HAAB_HHX0051\")),\r\n  #\"Added custom\" = Table.AddColumn(Source, \"Custom\", each fnHAAB_HHX0051([Content])),\r\n  Custom =  Table.Combine( #\"Added custom\" [Custom])\nin\n    Custom;\r\nshared fn_oisXopingukava_23S_24K = let\r\n  fn_oisXopingukava_23S_24K = (source as binary) => \nlet \n importExcel = Excel.Workbook(source),\n    opingukavad_Sheet = importExcel{[Item=\"Ãpingukavad\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Columns\" = Table.RemoveColumns(opingukavad_Sheet,{\"Column9\", \"Column10\", \"Column11\", \"Column3\", \"Column4\", \"Column6\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Columns\", [PromoteAllScalars=true]),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Promoted Headers\",{{\"ÃliÃµpilaskood\", \"yliopilaskood\"}}),\n    selectCols = Table.SelectColumns (#\"Renamed Columns\",  {\"Semester\", \"yliopilaskood\", \"Aineid kokku\", \"EAP hulk\"}), \n    #\"Changed Type\" = Table.TransformColumnTypes(selectCols,{{\"Semester\", type text}, {\"yliopilaskood\", type text}, {\"Aineid kokku\", Int64.Type}, {\"EAP hulk\", Int64.Type}})\nin\n    #\"Changed Type\"\r\nin\r\n  fn_oisXopingukava_23S_24K;\r\nshared fakt_ois_lopetanud_alates2023 = let\n    Source = fakt_OIS_data,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([lõpetanud] = \"jah\") and [eksmatrikuleerimise kuupäev] >= #date(2023,1,1)),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"üliõpilaskood\", \"eksmatrikuleerimise kuupäev\"})\nin\n    #\"Removed Other Columns\";\r\nshared fakt_OISXopingukava_immatkp = let\n    Source = fakt_OISXopingukava,\n    addImmatkp = Table.AddColumn(Source, \"immatkp\", each let list0 = List.Buffer(fakt_OIS_data[üliõpilaskood]), \nlist1 = List.Buffer(fakt_OIS_data[immatrikuleerimise kuupäev]),\nkood = Number.FromText(Text.Start([yliopilaskood],2)),\naasta = Number.FromText(\"20\"&Text.Start([yliopilaskood],2)),\nposition = List.PositionOf(list0, [yliopilaskood]),\nresult =  if position>=0 then list1{position} else if kood <=17 then #date(2017,1,1) else #date(aasta, 1, 1) in result, type date),\n    Custom1 = Table.Sort(Table.AddColumn(addImmatkp, \"position\", each let  list0 = List.Buffer(fakt_OIS_data[üliõpilaskood]), position = List.PositionOf(list0, [yliopilaskood]) in position, Int64.Type), {{\"position\", Order.Ascending}}),\n    addRajaltMaas = Table.AddColumn(Custom1, \"rajaltMaas\", each let value = if [tase]=\"BAK\" then 4 else if [tase] =\"MAG\" then 3 else 0, \nnomPlus1 = Date.AddDays([immatkp], 365*value), \ntodaykp = Date.From(DateTime.LocalNow()),\nresult = if nomPlus1 <=todaykp then \"jah\" else \"ei\" in result, type text),\n    addAruandeaasta = Table.AddColumn(addRajaltMaas, \"aruandeaasta\", each let _month = Date.Month([immatkp]), _day = Date.Day([immatkp]), _year = Date.Year([immatkp]), \n_value = if [tase]=\"BAK\" then 3 else if [tase] =\"MAG\" then 2 else 0, \nresult1 = Number.ToText(_year+_value)&\"/\"&Text.End(Number.ToText(_year+_value+1), 2),\nresult2 = Number.ToText(_year+_value+1)&\"/\"&Text.End(Number.ToText(_year+_value+2),2),\nresult = if _month >= 11 and _day >=10 then result2 else result1 in result, type text)\nin\n    addAruandeaasta;\r\nshared test_OISXopingukava_immatkp = let\r\n  Source = fakt_OISXopingukava_immatkp,\r\n  Custom = Table.RowCount(Source),\r\n  #\"Grouped rows\" = Table.Group(Source, {\"aruandeaasta\", \"kava\"}, {{\"Count\", each Table.RowCount(_), Int64.Type}, {\"tbl\", each _, type nullable table[yliopilaskood = nullable text, Count = Int64.Type, Semester = nullable text, #\"Aineid kokku\" = nullable Int64.Type, #\"EAP hulk\" = nullable Int64.Type, kava = nullable text, tase = nullable text, sisseastumisaasta = nullable Int64.Type, #\"kaitsmise tulemus\" = nullable Int64.Type, KKH = nullable number, spetsialiseerumine = nullable text, immatkp = date, position = Int64.Type, rajaltMaas = text, aruandeaasta = text]}}),\r\n  #\"Sorted rows\" = Table.Sort(#\"Grouped rows\", {{\"aruandeaasta\", Order.Descending}})\r\nin\r\n  #\"Sorted rows\";\r\nshared _folderOIS = let\n    Source = SharePoint.Contents(\"https://livettu-my.sharepoint.com/personal/siyi_ma_taltech_ee\"),\n    Documents = Source{[Name=\"Documents\"]}[Content], \n    folderOIS = Documents{[Name=\"OIS\"]}[Content]\nin\n    folderOIS;\r\nshared getKavajuhiinstituut = let\r\n  Source = _folderOIS,\r\n  Custom = Source {[Name = \"Püsiandmed.xlsx\"]}[Content],\r\n  #\"Custom 1\" = Excel.Workbook(Custom, true),\r\n  Navigation = #\"Custom 1\"{[Item = \"majkavajuhid\", Kind = \"Table\"]}[Data],\r\n  #\"Removed other columns\" = Table.SelectColumns(Navigation, {\"kava\", \"kavajuhi\", \"juhi_instituut\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared dim_oisKava = let\n  Source = fakt_OIS_data,\n  selectCols = Table.Distinct( Table.SelectColumns(Source,{\"õppekava versiooni kood\"})),\n  addKava = Table.AddColumn(selectCols, \"kava\", each Text.Start([õppekava versiooni kood],4), type text),\n  selectKava = Table.Distinct( Table.SelectColumns(addKava,{\"kava\"})), \n  addTase = Table.AddColumn(selectKava, \"tase\", each let _value = Text.End([kava],1), result = if _value =\"B\" then \"BAK\" else if _value = \"M\" then \"MAG\" else if _value =\"D\" then \"DOK\" else \"NA\" in result, type text),\n  addRahvusv = Table.AddColumn(addTase, \"kasRahvusvaheline\", each if List.Contains(intl, [kava]) then \"jah\" else \"ei\", type text),\r\n  #\"Added custom\" = Table.AddColumn(addRahvusv, \"instituut\", each let list1 = List.Buffer( getKavajuhiinstituut[juhi_instituut]),\r\nlist0 = List.Buffer( getKavajuhiinstituut[kava]),\r\nresult = try list1 {List.PositionOf(list0, [kava])} otherwise \"na\" in result, type text)\r\n\r\n\nin\n  #\"Added custom\";\r\nshared intl = let\n  Source = {\"HAJB\", \"TVTB\", \"HAGM\", \"HAJM\", \"MAEM\", \"TVTM\"}\nin\n  Source;\r\nshared _folderOISX_opingukavaOtsing_alates23S_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"_folderOISX_opingukavaOtsing_alates23S\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[Name = nullable Text.Type, Extension = nullable Text.Type, #\"Date accessed\" = nullable DateTime.Type, #\"Date modified\" = nullable DateTime.Type, #\"Date created\" = nullable DateTime.Type, #\"Folder Path\" = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared _folderOISX_opingukavaOtsing_alates23S_WriteToDataDestination = let\r\n  _folderOISX_opingukavaOtsing_alates23S_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = _folderOISX_opingukavaOtsing_alates23S_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], _folderOISX_opingukavaOtsing_alates23S_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  _folderOISX_opingukavaOtsing_alates23S_WriteToDataDestination;\r\nshared _folderOISX_opingukavaOtsing_alates23S_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(_folderOISX_opingukavaOtsing_alates23S, {\"Name\", \"Extension\", \"Date accessed\", \"Date modified\", \"Date created\", \"Folder Path\"})\r\nin\r\n    SourceTable;\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\nshared FastCopyStaging = let\r\n  FastCopyStaging = Pipeline.FastCopyModelStorage(DefaultStaging, [Required = false])\r\nin\r\n  FastCopyStaging;\r\nshared append_HAAB_HHX0051_dekla_oisX_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"append_HAAB_HHX0051_dekla_oisX\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[Semester = nullable Text.Type, yliopilaskood = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared append_HAAB_HHX0051_dekla_oisX_WriteToDataDestination = let\r\n  append_HAAB_HHX0051_dekla_oisX_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = append_HAAB_HHX0051_dekla_oisX_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], append_HAAB_HHX0051_dekla_oisX_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  append_HAAB_HHX0051_dekla_oisX_WriteToDataDestination;\r\nshared append_HAAB_HHX0051_dekla_oisX_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(append_HAAB_HHX0051_dekla_oisX, {\"Semester\", \"yliopilaskood\"})\r\nin\r\n    SourceTable;\r\nshared fakt_ois_lopetanud_alates2023_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[Schema = \"dbo\", Item = \"fakt_ois_lopetanud_alates2023\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[üliõpilaskood = nullable Text.Type, #\"eksmatrikuleerimise kuupäev\" = nullable Date.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared fakt_ois_lopetanud_alates2023_WriteToDataDestination = let\r\n  fakt_ois_lopetanud_alates2023_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = fakt_ois_lopetanud_alates2023_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], fakt_ois_lopetanud_alates2023_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  fakt_ois_lopetanud_alates2023_WriteToDataDestination;\r\nshared fakt_ois_lopetanud_alates2023_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(fakt_ois_lopetanud_alates2023, {\"üliõpilaskood\", \"eksmatrikuleerimise kuupäev\"})\r\nin\r\n    SourceTable;\r\n","connectionOverrides":[{"path":"FabricSql","kind":"FabricSql","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"FabricSql\",\"path\":\"FabricSql\"}","audience":null},{"path":"https://livettu-my.sharepoint.com/personal/siyi_ma_taltech_ee","kind":"SharePoint","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"SharePoint\",\"path\":\"https://livettu-my.sharepoint.com/personal/siyi_ma_taltech_ee\"}","audience":null},{"path":"https://livettu.sharepoint.com/sites/M_admin","kind":"SharePoint","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"SharePoint\",\"path\":\"https://livettu.sharepoint.com/sites/M_admin\"}","audience":null}]},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"Id\":\"036c6d12-63c8-4d7c-aca9-f8787563be90\",\"Name\":\"_folders\",\"Description\":\"\",\"ParentId\":null,\"Order\":0},{\"Id\":\"35fbd4db-c26e-45da-ae24-a911f4981733\",\"Name\":\"customFunctions\",\"Description\":\"\",\"ParentId\":null,\"Order\":0}]"}],"entities":[{"$type":"LocalEntity","name":"fakt_OIS_data","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"fakt_OIS_data.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"isikukood","dataType":"string"},{"name":"kodakondsus","dataType":"string"},{"name":"aktiivne","dataType":"string"},{"name":"üliõpilaskood","dataType":"string"},{"name":"sisseastumisaasta","dataType":"string"},{"name":"õppekava versiooni kood","dataType":"string"},{"name":"peaeriala/eriala","dataType":"string"},{"name":"spetsialiseerumise nimetus lõpetanul","dataType":"string"},{"name":"õppekoormus","dataType":"string"},{"name":"lõpetanud","dataType":"string"},{"name":"cum laude","dataType":"string"},{"name":"ennistamise kuupäev","dataType":"date"},{"name":"EAP","dataType":"double"},{"name":"KKH (EAP)","dataType":"double"},{"name":"eksmatrikuleerimise kuupäev","dataType":"date"},{"name":"eksmatrikuleerimise põhjus","dataType":"string"},{"name":"immatrikuleerimise kuupäev","dataType":"date"},{"name":"immatrikuleerimise korralduse tüüp","dataType":"string"},{"name":"välisüliõpilane","dataType":"string"},{"name":"õpitud semestrite arv","dataType":"int64"},{"name":"akad. puhkusel sem. arv","dataType":"int64"},{"name":"vanu","dataType":"int64"},{"name":"auranneAasta","dataType":"string"},{"name":"staatus","dataType":"string"},{"name":"eksmatQuarter","dataType":"int64"}]},{"$type":"LocalEntity","name":"fakt_OISXopingukava","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"fakt_OISXopingukava.parquet"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"},{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"Semester","dataType":"string"},{"name":"yliopilaskood","dataType":"string"},{"name":"Aineid kokku","dataType":"int64"},{"name":"EAP hulk","dataType":"int64"},{"name":"kava","dataType":"string"},{"name":"tase","dataType":"string"},{"name":"sisseastumisaasta","dataType":"int64"},{"name":"lopetanuteKP","dataType":"date"}]},{"$type":"LocalEntity","name":"fakt_OISXopingukava_immatkp","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"fakt_OISXopingukava_immatkp.parquet"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"},{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"Semester","dataType":"string"},{"name":"yliopilaskood","dataType":"string"},{"name":"Aineid kokku","dataType":"int64"},{"name":"EAP hulk","dataType":"int64"},{"name":"kava","dataType":"string"},{"name":"tase","dataType":"string"},{"name":"sisseastumisaasta","dataType":"int64"},{"name":"lopetanuteKP","dataType":"date"},{"name":"immatkp","dataType":"date"},{"name":"position","dataType":"int64"},{"name":"rajaltMaas","dataType":"string"},{"name":"aruandeaasta","dataType":"string"}]},{"$type":"LocalEntity","name":"dim_oisKava","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"dim_oisKava.parquet"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"},{"name":"ppdf:entityKeys","value":"[{\"columns\":[\"kava\"]}]"}],"attributes":[{"name":"kava","dataType":"string"},{"name":"tase","dataType":"string"},{"name":"kasRahvusvaheline","dataType":"string"},{"name":"instituut","dataType":"string"}]}]}